name: Docker Build and Publish

on:
  push:
    branches:
      - main
  schedule:
    - cron: "33 3 26 * *"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get latest version from GitHub release
        id: get-latest-version
        run: |
          latest_release=$(curl -s https://api.github.com/repos/dushixiang/next-terminal/releases/latest | jq -r '.tag_name')
          echo "::set-output name=latest_version::$latest_release"

      - name: Compare versions
        id: compare-versions
        run: |
          if [ "${{ steps.get-latest-version.outputs.latest_version }}" == "${{ github.event.inputs.version }}" ]; then
            echo "Versions match. No need to update."
            echo "::set-output name=update_required::false"
          else
            echo "Versions do not match. Updating image."
            echo "::set-output name=update_required::true"
          fi

      - name: Build and push Docker image
        if: ${{ steps.compare-versions.outputs.update_required == 'true' }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          IMAGE_NAME: aaronlee/next-terminal
          IMAGE_TAG: ${{ github.event.inputs.version }}
          IMAGE_TAG_TIMESTAMP: ${{ github.run_number }}
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $IMAGE_NAME:$IMAGE_TAG -t $IMAGE_NAME:$IMAGE_TAG-$IMAGE_TAG_TIMESTAMP --push .

      - name: Update version file
        if: ${{ steps.compare-versions.outputs.update_required == 'true' }}
        run: |
          echo ${{ github.event.inputs.version }} > version
          echo "Version file updated."

      - name: Commit and push changes
        if: ${{ steps.compare-versions.outputs.update_required == 'true' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add version
          git commit -m "Update version"
          git push
