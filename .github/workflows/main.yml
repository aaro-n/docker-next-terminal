name: Docker Build and Publish

on:
  push:
    branches:
      - main
  schedule:
    - cron: "33 3 26 * *"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest version
        id: get-latest-version
        run: |
          latest_version=$(curl -s https://api.github.com/repos/dushixiang/next-terminal/releases/latest | grep -oP '"tag_name": "\K(.*?)(?=")')
          echo "::set-output name=version::$latest_version"

      - name: Check if version has changed
        id: check-version
        run: |
          current_version=$(cat version)
          latest_version=${{ steps.get-latest-version.outputs.version }}
          if [[ "$current_version" == "$latest_version" ]]; then
            echo "No changes in version. Skipping build."
            exit 0
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64,linux/arm/v7,linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/next-terminal:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/next-terminal:${{ steps.get-latest-version.outputs.version }}-${{ format(github.run_number, 'yyyyMMddHHmmss') }}

      - name: Update version file
        uses: actions/create-file@v2
        with:
          path: version
          content: ${{ steps.get-latest-version.outputs.version }}
        if: steps.check-version.outputs.result == 'success'
