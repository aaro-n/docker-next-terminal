name: Docker Build and Publish

on:
  push:
    branches:
      - main
  schedule:
    - cron: "33 3 26 * *"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build nginx-extras:latest image
        run: docker build --platform linux/386 -t aaronlee/nginx-extras:latest .

      - name: Get nginx version
        id: get-version
        run: |
          echo "::set-output name=version::$(docker run --rm aaronlee/nginx-extras:latest cat /tmp/nginx_version.txt)"

      - name: Check version and skip if same
        id: check-version
        run: |
          if [ "${{ steps.get-version.outputs.version }}" = "$(cat version)" ]; then
            echo "Version ${{ steps.get-version.outputs.version }} already exists, skipping build and push."
            echo "::set-output name=skip::true"
          else
            echo "Version ${{ steps.get-version.outputs.version }} is different, continuing with build and push."
            echo "::set-output name=skip::false"
          fi

      - name: Set build timestamp
        id: set-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"

      - name: Build and push Docker image
        if: steps.check-version.outputs.skip != 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64,linux/arm/v7,linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:${{ steps.get-version.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/nginx-extras:${{ steps.get-version.outputs.version }}-${{ steps.set-timestamp.outputs.timestamp }}

      - name: Update version file
        if: steps.check-version.outputs.skip != 'true'
        run: |
          echo "${{ steps.get-version.outputs.version }}" > version

      - name: Upload version file
        if: steps.check-version.outputs.skip != 'true'
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version

      - name: Update version file in repository
        if: steps.check-version.outputs.skip != 'true'
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "your.email@example.com"
          git add version
          git commit -m "Update version file"
          git push
